{
    "openapi": "3.0.0",
    "info": {
        "title": "Documentazione API rest",
        "description": "Per utilizzare le funzioni update e store, dopo aver incollato il token nell'authorization, cliccare su body, raw, JSON e sarà tutto già preimpostato",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost"
        }
    ],
    "paths": {
        "/api/asset_classes": {
            "post": {
                "tags": [
                    "AssetClass"
                ],
                "summary": "Crea un'asset class",
                "operationId": "880443fef4c774d4c726a25ba37da5eb",
                "responses": {
                    "200": {
                        "description": "Asset class creata con successo"
                    },
                    "400": {
                        "description": "Asset class già esistente"
                    }
                }
            }
        },
        "/api/asset_classes/{id}": {
            "put": {
                "tags": [
                    "AssetClass"
                ],
                "summary": "Aggiorna un'asset class con l'id specificato nell'URL",
                "operationId": "158683e066d26aeff4ca40b56d6cf9b9",
                "responses": {
                    "200": {
                        "description": "Update avvenuto con successo"
                    },
                    "404": {
                        "description": "Asset class non trovata"
                    },
                    "400": {
                        "description": "Asset class già esistente"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AssetClass"
                ],
                "summary": "Elimina l'asset class con l'id specificato",
                "operationId": "36be41495751481a639d361123506502",
                "responses": {
                    "200": {
                        "description": "Asset class eliminata con successo"
                    },
                    "404": {
                        "description": "Asset class non trovata"
                    }
                }
            }
        },
        "/api/asset-classes": {
            "get": {
                "tags": [
                    "AssetClass"
                ],
                "summary": "Torna una lista di asset classes con i filtri specificati",
                "operationId": "9e3b4be32b67439c42ce81074fce5885",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filtro per ID dell'asset class",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "asset_name",
                        "in": "query",
                        "description": "Filtro per nome dell'asset class (case insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_name",
                        "in": "query",
                        "description": "Filtro per nome del servizio (case insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "query",
                        "description": "Filtro per ID del servizio",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commission_name",
                        "in": "query",
                        "description": "Filtro per nome della commissione (case insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "commission_id",
                        "in": "query",
                        "description": "Filtro per ID della commissione",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successo"
                    },
                    "400": {
                        "description": "Errore"
                    },
                    "404": {
                        "description": "Filtro non riconosciuto"
                    }
                }
            }
        },
        "/api/commissions": {
            "get": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Torna una lista delle commission",
                "operationId": "230f5c7f1ea9c9dad573c5434470c988",
                "responses": {
                    "200": {
                        "description": "Successo"
                    },
                    "400": {
                        "description": "Errore"
                    }
                }
            },
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Crea una commission",
                "operationId": "b432771dbb4c8bfda2a9d58e5cf7cc1a",
                "responses": {
                    "200": {
                        "description": "Commission creata con successo"
                    },
                    "400": {
                        "description": "Commission già esistente"
                    }
                }
            }
        },
        "/api/commissions/{id}": {
            "put": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Fa l'update di una commission con l'id specificato",
                "operationId": "dbf747d8d5a833b247378f811332ee65",
                "responses": {
                    "200": {
                        "description": "Update avvenuto con successo"
                    },
                    "400": {
                        "description": "Commission già esistente"
                    },
                    "404": {
                        "description": "Commission non trovata"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Elimina la commission con l'id specificato",
                "operationId": "61d19d406e0ec5ff86720fbcdef9dbb9",
                "responses": {
                    "200": {
                        "description": "Commission eliminata con successo"
                    },
                    "404": {
                        "description": "Commission non trovata"
                    }
                }
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Torna una lista di service",
                "operationId": "1d9df30d3f7c1c8334e5d7c73d232de4",
                "responses": {
                    "200": {
                        "description": "Successo"
                    },
                    "400": {
                        "description": "Errore"
                    }
                }
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Crea un service",
                "operationId": "010093c33b6b285def64a2068d4241ff",
                "responses": {
                    "200": {
                        "description": "Service creato con successo"
                    },
                    "400": {
                        "description": "Service già esistente"
                    }
                }
            }
        },
        "/api/services/{id}": {
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Fa l'update del service con l'id specificato",
                "operationId": "8b3aa18d8d28cd74747ab11b51c373c7",
                "responses": {
                    "200": {
                        "description": "Update avvenuto con successo"
                    },
                    "400": {
                        "description": "Service già esistente"
                    },
                    "404": {
                        "description": "Service non trovato"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Elimina il service con l'id specificato",
                "operationId": "606bc673836b30369c7209022258f7ed",
                "responses": {
                    "200": {
                        "description": "Service eliminato con successo"
                    },
                    "404": {
                        "description": "Service non trovato"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200": {
                "description": "Richiesta completata con successo"
            },
            "400": {
                "description": "Richiesta non valida: succede quando uno o più parametri sono errati o mancano, o quando quell'elemento inserito esiste già"
            },
            "404": {
                "description": "Risorsa non trovata. Questo accade quando quell'elemento non è presente nel database"
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "AssetClass",
            "description": "AssetClass"
        },
        {
            "name": "Commissions",
            "description": "Commissions"
        },
        {
            "name": "Service",
            "description": "Service"
        }
    ]
}